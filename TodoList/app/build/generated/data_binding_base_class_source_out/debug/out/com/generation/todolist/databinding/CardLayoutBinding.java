// Generated by view binder compiler. Do not edit!
package com.generation.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.generation.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button buttonDeletar;

  @NonNull
  public final Switch switchAtivo;

  @NonNull
  public final TextView textCategoria;

  @NonNull
  public final TextView textData;

  @NonNull
  public final TextView textDescricao;

  @NonNull
  public final TextView textNome;

  @NonNull
  public final TextView textResponsavel;

  private CardLayoutBinding(@NonNull CardView rootView, @NonNull Button buttonDeletar,
      @NonNull Switch switchAtivo, @NonNull TextView textCategoria, @NonNull TextView textData,
      @NonNull TextView textDescricao, @NonNull TextView textNome,
      @NonNull TextView textResponsavel) {
    this.rootView = rootView;
    this.buttonDeletar = buttonDeletar;
    this.switchAtivo = switchAtivo;
    this.textCategoria = textCategoria;
    this.textData = textData;
    this.textDescricao = textDescricao;
    this.textNome = textNome;
    this.textResponsavel = textResponsavel;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDeletar;
      Button buttonDeletar = ViewBindings.findChildViewById(rootView, id);
      if (buttonDeletar == null) {
        break missingId;
      }

      id = R.id.switchAtivo;
      Switch switchAtivo = ViewBindings.findChildViewById(rootView, id);
      if (switchAtivo == null) {
        break missingId;
      }

      id = R.id.textCategoria;
      TextView textCategoria = ViewBindings.findChildViewById(rootView, id);
      if (textCategoria == null) {
        break missingId;
      }

      id = R.id.textData;
      TextView textData = ViewBindings.findChildViewById(rootView, id);
      if (textData == null) {
        break missingId;
      }

      id = R.id.textDescricao;
      TextView textDescricao = ViewBindings.findChildViewById(rootView, id);
      if (textDescricao == null) {
        break missingId;
      }

      id = R.id.textNome;
      TextView textNome = ViewBindings.findChildViewById(rootView, id);
      if (textNome == null) {
        break missingId;
      }

      id = R.id.textResponsavel;
      TextView textResponsavel = ViewBindings.findChildViewById(rootView, id);
      if (textResponsavel == null) {
        break missingId;
      }

      return new CardLayoutBinding((CardView) rootView, buttonDeletar, switchAtivo, textCategoria,
          textData, textDescricao, textNome, textResponsavel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
